version: 2
jobs:
    build_and_test:
        working_directory: ~/planning-poker
        docker: 
            - image: circleci/node:9-jessie-browsers
        steps:
            - checkout
            - run:
                name: Install npm
                command: 'sudo npm install -g npm@latest'
            - restore_cache: 
                key: dependency-cache-{{ checksum "package.json" }}
            - run:
                name: Install dependencies
                command: npm install
            - save_cache:
                key: dependency-cache-{{ checksum "package.json" }}
                paths:
                    - ./node_modules
            - run:
                name: Run tests
                command: npm test
    dockerize:
        working_directory: ~/planning-poker
        docker: 
            - image: docker:17.05.0-ce-git
        steps:
            - checkout
            - setup_remote_docker
            - restore_cache: 
                key: dependency-cache-{{ checksum "package.json" }}
            - run:
                name: Install dependencies
                command: |
                    apk add --no-cache py-pip=9.0.0-r1
                    pip install docker-compose==1.12.0 awscli==1.11.76
            - run:
                name: Build Docker image
                command: |
                    docker build --rm -t kdelemme/planning-poker-service .
            - run:
                name: Push Docker image
                command: |
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        login="$(aws ecr get-login --region eu-west-1)"
                        ${login}
                        docker tag kdelemme/planning-poker-service \
                            "${ECR_ENDPOINT}/kdelemme/planning-poker-service:${CIRCLE_SHA1}"
                        docker push "${ECR_ENDPOINT}/kdelemme/planning-poker-service:${CIRCLE_SHA1}"
                    fi
workflows:
    version: 2
    build_branch:
        jobs:
            - build_and_test
            - dockerize:
                requires:
                    - build_and_test
                filters:
                    branches:
                        only: master